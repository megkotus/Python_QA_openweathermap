{"uid":"24dba48469d15eca","name":"test_weather_api_returns_correct_city_name[Berlin]","fullName":"tests.test_api#test_weather_api_returns_correct_city_name","historyId":"c7a8afcb58c4084abcab41afc52a406f","time":{"start":1739471277108,"stop":1739471277229,"duration":121},"status":"failed","statusMessage":"AssertionError: Expected 200, but got 401\nassert 401 == 200\n +  where 401 = <Response [401]>.status_code","statusTrace":"city = 'Berlin'\n\n    @pytest.mark.parametrize('city', ['London', 'Podgorica', 'Berlin', 'Dubrovnik'])\n    def test_weather_api_returns_correct_city_name(city):\n        response = requests.get(urls.api_url, params={'q': city, 'appid': api_key})\n        json_data = response.json()\n>       assert response.status_code == 200, f\"Expected 200, but got {response.status_code}\"\nE       AssertionError: Expected 200, but got 401\nE       assert 401 == 200\nE        +  where 401 = <Response [401]>.status_code\n\ntests/test_api.py:16: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1739471276767,"stop":1739471276767,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_session_faker","time":{"start":1739471276767,"stop":1739471276768,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1739471276767,"stop":1739471276767,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1739471276768,"stop":1739471276768,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1739471276768,"stop":1739471276768,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_api"},{"name":"host","value":"fv-az1376-484"},{"name":"thread","value":"2491-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"city","value":"'Berlin'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"24dba48469d15eca.json","parameterValues":["'Berlin'"]}